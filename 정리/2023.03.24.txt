제약 조건
AUTO_INCREMENT 해당 필드의 값을 1부터 시작하여 새로운 레코드가 추가될 때마다 1씩 증가된 값 저장

테이블 수정
(거의 사용하면 안 된다 => 참조하고 있는 부분에 영향을 미치거나 예기치 못한 오류 발생할 수 있기 때문이다)
ADD 테이블에 필드 추가
DROP 테이블의 필드 삭제
MODIFY COLUMN 테이블의 필드 타입 변경

테이블 삭제
(거의 사용 안되도록 하는 것이 좋다)

TRUNCATE TABLE => 테이블만 남아있고 인덱스가 1번부터 다시 시작한다
DROP => 테이블 자체를 없애버린다.
DELETE => 테이블 남아있고 인덱스도 그대로 남아있다

고정 소수점 타입
DECIMAL(M,D) ex) DECIMAL(7, 2) => 정수부분 5자리 소수부분 2자리

BLOB (*기억)
바이너리 데이터 (이진 데이터)
이 형태 그대로 저장하고 싶으면 BLOB을 사용한다
대소문자 구분 X

TEXT (*기억) 
대소문자 구분 O

ENUM 
데이터값을 정해진 값들만 받겠다

*관계형 데이터베이스에서의 Object 타입 표현 (List)
따로 정의를 해놓아야 한다

- 데이터베이스 생성
- 사용할 데이터베이스 지정
- 테이블 생성
- 테이블명 데이터타입 제약조건을 확인
- 기본키(NOT NULL, UNIQUE) 지정
- NOT NULL, UNIQUE는 후보키로 사용할 수 있는 것들이다
* 테이블마다 중복된 필드들이 있다
-> 어떤 한 필드의 값이 바뀌면 동시에 바꿔줘야 하기 때문에 중복된 값들을 따로 빼주어서 테이블 생성해주어야 한다

* 테이블 생성 시 주의할 점
정보시스템이 비즈니스 위에 가면 안 된다
테이블명과 필드명은 웬만하면 단수 형태로 하는 것이 좋다

어떤 행위에 의해 발생된 데이터 ==> 관계에 의한 데이터
관계
관계를 정할 시에는 실제로 물리적인 물체가 어떤 것이 있는지 파악
ex) train하고 Station에는 일 대 다의 관계가 형성
= 역은 하나이다
= 역에는 여러 대의 기차가 도착 가능하다

ex) Train과 seat N:M 관계
다 대 다의 관계일 시에는 관계 참조를 위해 관계 테이블이라는 것을 따로 만든다

좌석 : 관리하는 단위까지 생각
일반실 A1, A2, A3, A4 ~ ..J4
그 열차의 좌석에 대해서 어떤 열차와 예약 간의 관계
3개의 테이블에 대해서 관계
SEAT은 선언한 type, seat_number, train_type를 합쳐야 설명이 가능하다
=> 3개 다 기본 키이다
복합 primary key

train number, seat code 이 둘을 이용하여
=> 이 열차의 이 좌석은 누가 앉아있는가 아닌가 등 다양하게 생각해봐야 한다


